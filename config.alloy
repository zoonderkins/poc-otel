logging {
	level = "debug"
	format = "logfmt"
	write_to = [loki.relabel.alloy_logs.receiver]
}

loki.relabel "alloy_logs" {
	rule {
		target_label = "app_name"
		replacement = "alloy"
	}

	rule {
		target_label = "level"
		source_labels = ["level"]
		regex = "(debug|info|warn|error)"
	}

	forward_to = [loki.write.loki.receiver]
}

loki.relabel "frontend_logs" {
	rule {
		target_label = "job"
		replacement = "frontend"
	}

	rule {
		source_labels = ["app_name"]
		target_label = "app_name"
	}

	rule {
		target_label = "level"
		source_labels = ["level"]
		regex = "(debug|info|warn|error)"
	}

	rule {
		source_labels = ["traceId"]
		target_label = "traceID"
	}

	rule {
		source_labels = ["meta_browser_userAgent"]
		target_label = "browser"
	}

	rule {
		source_labels = ["meta_browser_locale"]
		target_label = "locale"
	}

	rule {
		source_labels = ["meta_app_version"]
		target_label = "version"
	}

	rule {
		source_labels = ["meta_app_environment"]
		target_label = "environment"
	}

	forward_to = [loki.write.loki.receiver]
}

loki.write "loki" {
	endpoint {
		url = "http://loki:3100/loki/api/v1/push"
	}
}

otelcol.exporter.otlp "tempo" {
	client {
		endpoint = "http://tempo:4317"
		tls {
			insecure = true
			insecure_skip_verify = true
		}
	}
}

faro.receiver "faro" {
	server {
		listen_address = "0.0.0.0"
		cors_allowed_origins = ["*"]
		api_key = "asdf"
	}
	
	sourcemaps { }
	
	extra_log_labels = {
		service = "frontend",
		environment = "development",
	}

	output {
		logs   = [loki.relabel.frontend_logs.receiver]
		traces = [otelcol.exporter.otlp.tempo.input]
	}
}

tracing {
	sampling_fraction = 1
	write_to = [otelcol.exporter.otlp.tempo.input]
}
