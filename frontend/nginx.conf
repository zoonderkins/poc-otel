server {
    listen 80;
    server_name localhost;

    # Add error logging
    error_log /var/log/nginx/error.log debug;
    access_log /var/log/nginx/access.log;

    location / {
        root /usr/share/nginx/html;
        try_files $uri $uri/ /index.html;
        index index.html;
    }

    # Auth Service
    location /api/auth {
        proxy_pass http://auth-service:3001;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }

    # Product Service
    location /api/products {
        proxy_pass http://product-service:3002;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header Authorization $http_authorization;
        proxy_pass_header Authorization;
        proxy_cache_bypass $http_upgrade;

        # Add CORS headers
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, *' always;
    }

    # Cart Service with detailed logging
    location /api/cart {
        proxy_pass http://cart-service:3003;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header Authorization $http_authorization;
        proxy_pass_header Authorization;
        proxy_cache_bypass $http_upgrade;

        # Add debug headers
        add_header X-Debug-Target "http://cart-service:3003$request_uri" always;
        add_header X-Debug-Status $status always;

        # Add CORS headers
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, *' always;
        add_header 'Access-Control-Expose-Headers' 'Authorization' always;

        # Handle OPTIONS method
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, *';
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            add_header 'Content-Length' 0;
            return 204;
        }

        # Add request debugging
        error_log /var/log/nginx/cart-debug.log debug;
    }

    # Order Service
    location /api/orders {
        proxy_pass http://order-service:3004;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header Authorization $http_authorization;
        proxy_pass_header Authorization;
        proxy_cache_bypass $http_upgrade;

        # Add debug headers
        add_header X-Debug-Target "http://order-service:3004$request_uri" always;
        add_header X-Debug-Status $status always;

        # Add CORS headers
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, *' always;
        add_header 'Access-Control-Expose-Headers' 'Authorization' always;

        # Handle OPTIONS method
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, *';
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            add_header 'Content-Length' 0;
            return 204;
        }

        # Add request debugging
        error_log /var/log/nginx/order-debug.log debug;
    }

    # Alloy collect endpoint
    location /collect {
        proxy_pass http://alloy:12347/collect;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header Content-Type "application/vnd.faro.telemetry+json";
        proxy_cache_bypass $http_upgrade;

        # Debug headers
        add_header X-Debug-Target "http://alloy:12347/collect" always;
        add_header X-Debug-Status $status always;

        # CORS headers
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization, *' always;
        add_header 'Access-Control-Expose-Headers' '*' always;
        add_header 'Access-Control-Max-Age' '3600' always;

        # Handle OPTIONS preflight
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization, *';
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            add_header 'Content-Length' 0;
            return 204;
        }

        # Forward the original request body
        proxy_pass_request_body on;
        proxy_set_header Content-Length $content_length;

        # Add detailed logging
        error_log /var/log/nginx/alloy-debug.log debug;
        access_log /var/log/nginx/alloy-access.log;
    }
} 