services:
  alloy:
    image: grafana/alloy:latest
    user: "0:0"
    volumes:
      - ./config.alloy:/etc/alloy/config.alloy
      - alloy-data:/var/lib/alloy/data
    ports:
      - "12345:12345"
      - "12347:12347"
      - "6832:6832"
      - "55679:55679"
      - "9091:9091"
    command:
      - run
      - /etc/alloy/config.alloy
      - --storage.path=/var/lib/alloy/data
      - --server.http.listen-addr=0.0.0.0:12345
      - --stability.level=experimental
    restart: always
    networks:
      - monitoring_network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "80:80"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - alloy
      - auth-service
      - product-service
      - cart-service
      - order-service
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always
    networks:
      - monitoring_network

  auth-service:
    build:
      context: ./backend
      dockerfile: auth-service/Dockerfile
    ports:
      - "3011:3001"
    volumes:
      - ./backend/shared:/app/shared
      - ./backend/auth-service:/app/auth-service
      - ./backend/db.json:/app/shared/db.json
    environment:
      - PORT=3001
      - JWT_SECRET=your-secret-key
    depends_on:
      - alloy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3001/api/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always
    networks:
      - monitoring_network

  product-service:
    build:
      context: ./backend
      dockerfile: product-service/Dockerfile
    ports:
      - "3012:3002"
    volumes:
      - ./backend/shared:/app/shared
      - ./backend/product-service:/app/product-service
      - ./backend/db.json:/app/shared/db.json
    environment:
      - PORT=3002
      - JWT_SECRET=your-secret-key
    depends_on:
      - alloy
      - auth-service
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3002/api/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always
    networks:
      - monitoring_network

  cart-service:
    build:
      context: ./backend
      dockerfile: cart-service/Dockerfile
    ports:
      - "3013:3003"
    volumes:
      - ./backend/shared:/app/shared
      - ./backend/cart-service:/app/cart-service
      - ./backend/db.json:/app/shared/db.json
    environment:
      - PORT=3003
      - JWT_SECRET=your-secret-key
    depends_on:
      - alloy
      - auth-service
      - product-service
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3003/api/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always
    networks:
      - monitoring_network

  order-service:
    build:
      context: ./backend
      dockerfile: order-service/Dockerfile
    ports:
      - "3014:3004"
    volumes:
      - ./backend/shared:/app/shared
      - ./backend/order-service:/app/order-service
      - ./backend/db.json:/app/shared/db.json
    environment:
      - PORT=3004
      - JWT_SECRET=your-secret-key
    depends_on:
      - alloy
      - auth-service
      - cart-service
      - product-service
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3004/api/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always
    networks:
      - monitoring_network

  tempo:
    image: grafana/tempo:latest
    user: "root"
    ports:
      - 3200:3200   # tempo query frontend
      - 9095:9095   # tempo grpc
      - 14268:14268 # jaeger ingest
      - 4318:4318   # otlp http (primary for traces)
      - 4317:4317   # otlp grpc (keep for compatibility)
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
      - ./tempo/tempo.yaml:/etc/tempo.yaml
      - tempo-data:/tmp/tempo
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3200/ready"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always
    networks:
      - monitoring_network

  loki:
    image: grafana/loki:latest
    command: ["-config.file=/etc/loki/loki.yaml", "-config.expand-env=true"]
    user: "root"
    ports:
      - "3100:3100"
    volumes:
      - ./loki/loki.yaml:/etc/loki/loki.yaml
      - loki-data:/tmp/loki
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3100/ready || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always
    networks:
      - monitoring_network

  mimir:
    image: grafana/mimir:latest
    command: ["-ingester.native-histograms-ingestion-enabled=true", "-config.file=/etc/mimir.yaml"]
    ports:
      - "9009:9009"
    volumes:
      - ./mimir/mimir.yaml:/etc/mimir.yaml
      - mimir-data:/tmp/mimir
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9009/ready"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always
    networks:
      - monitoring_network

volumes:
  alloy-data:
  tempo-data:
  loki-data:
  mimir-data:

networks:
  monitoring_network:
    name: monitoring_network`